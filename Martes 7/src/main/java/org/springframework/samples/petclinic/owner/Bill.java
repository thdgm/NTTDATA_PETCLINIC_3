/*
 * Copyright 2012-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.springframework.samples.petclinic.owner;



import java.time.LocalDate;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotEmpty;

/**
 * Simple JavaBean domain object representing an owner.
 *
 * Diego Garcia Muro
 * Tarea para el martes 7
 */
@Entity
@Table(name = "bills")
public class Bill{

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer id;

	@Column(name = "id_number")
	@NotEmpty
	private Integer idNumber;
	
	@Column(name = "money")
	@NotEmpty
	private Double money;
	
	@Column(name = "payment_date")
	@NotEmpty
	private LocalDate date;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="visit_id", nullable=false)
	private Visit visit;
	
	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getIdNumber() {
		return idNumber;
	}

	public void setIdNumber(Integer idNumber) {
		this.idNumber = idNumber;
	}

	public Double getMoney() {
		return money;
	}

	public void setMoney(Double money) {
		this.money = money;
	}

	public LocalDate getDate() {
		return date;
	}

	public void setDate(LocalDate date) {
		this.date = date;
	}
	

}

/*
 * 
 * CREATE TABLE bills (
  id          INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_number   BIGINT(20),
  money       DOUBLE,
  payment_date  DATE,
  visit_id      INTEGER,
);
ALTER TABLE bills ADD CONSTRAINT fk_bills_visit FOREIGN KEY (visit_id) REFERENCES visits (id);
CREATE INDEX bills_visit_id ON bills (visit_id);


INSERT INTO bills VALUES (default, 1234, '200.0','2013-01-04', 1);
INSERT INTO bills VALUES (default, 12345, '34.90','2013-01-04', 1);
*/
